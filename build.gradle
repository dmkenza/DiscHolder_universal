

plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.8.0" apply false
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
    id "org.jetbrains.kotlin.jvm" //version "${kotlin_version}"
    id "io.github.pacifistmc.forgix" version "1.2.6"
    id "com.github.johnrengelman.shadow" version "7.1.2"

}

architectury {
    minecraft = rootProject.minecraft_version
}
configurations {
    shade
    implementation.extendsFrom shade
}

subprojects {

    apply plugin: "dev.architectury.loom"
    apply plugin: "io.github.juuxel.loom-quiltflower"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
//        mappings(loom.layered {
//            officialMojangMappings()
//            parchment("org.parchmentmc.data:parchment-${fabric_parchment_mc_version}:${fabric_parchment_version}@zip")
//        })
        // The following line declares the yarn mappings you may select this one as well.
         mappings "net.fabricmc:yarn:1.19.2+build.27:v2"

//        modImplementation "io.github.cottonmc:Jankson-Fabric:${rootProject.jankson_version}"
//        include "io.github.cottonmc:Jankson-Fabric:${rootProject.jankson_version}"

//        api "blue.endless:jankson:1.2.1"
//        modImplementation("blue.endless:jankson:1.2.1")
//        shade 'blue.endless:jankson:1.2.1'

//        shade 'org.joml:joml:1.10.5'
//        include 'org.joml:joml:1.10.5'
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)

}
forgix {
    group = rootProject.group
    mergedJarName = "${rootProject.archives_base_name}-${rootProject.mod_version}-universal+${rootProject.minecraft_version}.jar"
    outputDir = "build/libs"

    forge {
        jarLocation = "build/libs/${rootProject.archives_base_name}-${rootProject.mod_version}-forge+${rootProject.minecraft_version}.jar"
    }
    fabric {
        jarLocation = "build/libs/${rootProject.archives_base_name}-${rootProject.mod_version}-fabric+${rootProject.minecraft_version}.jar"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"
    apply plugin: "kotlin"

//    apply from: 'https://raw.githubusercontent.com/thedarkcolour/KotlinForForge/site/thedarkcolour/kotlinforforge/gradle/kff-3.7.1.gradle'


    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        mavenLocal()
        maven {
            url = 'https://maven.terraformersmc.com/releases'
        }
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org/'
        }

        maven {
            name = 'Illusive Soulworks'
            url = 'https://maven.theillusivec4.top/'
        }

        maven {
            url "https://server.bbkr.space/artifactory/libs-release"
            content {
                includeGroup "io.github.cottonmc"
            }
        }
        maven {
            url = "https://maven.terraformersmc.com/releases"
            content {
                includeGroup "com.terraformersmc"
            }
        }
        jcenter()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

